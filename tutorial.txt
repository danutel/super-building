~~~~~~~~~~~~Box~~~~~~~~~~~~~~~~~~~~~~~~

box = new Box(brickLength, brickHeight, brickWidth); dimensiuni
box.scaleTextureCoordinates(new Vector2f(1f, .5f));	scaleaza textura pe suprafata


~~~~~~~~~~~Sphere~~~~~~~~~~~~~~~~~~~~~~

sphere = new Sphere(32, 32, 0.4f, true, false);


~~~~~~~~~~~PhysX Setup~~~~~~~~~~~~~~~~~

bulletAppState = new BulletAppState();
stateManager.attach(bulletAppState);

Geometry floor = new Geometry("Floor", box);
RigidBodyControl floor_phy = new RigidBodyControl(masa);
floor.addControl(floor_phy);
bulletAppState.getPhysicsSpace().add(floor_phy);

CollisionShape sceneShape = CollisionShapeFactory.createMeshShape((Node) sceneModel);
landscape = new RigidBodyControl(sceneShape, 0);
sceneModel.addControl(landscape);

~~~~~~~~~~~Camera config~~~~~~~~~~~~~~~

cam.setLocation(new Vector3f(x, z, y)); pozitia camerei
cam.lookAt(new Vector3f(2, 2, 0), Vector3f.UNIT_Y); locul unde focuseaza
flyCam.setMoveSpeed(20); viteza cu care te poti misca

CapsuleCollisionShape capsuleShape = new CapsuleCollisionShape(1.5f, 6f, 1); pentru player camera
player = new CharacterControl(capsuleShape, 0.05f);						
player.setJumpSpeed(20);
player.setFallSpeed(30);
player.setGravity(70);
player.setPhysicsLocation(new Vector3f(0, 10, 0));
bulletAppState.getPhysicsSpace().add(player);

~~~~~~~~~~~~Lumina~~~~~~~~~~~~~~~~~~~~~

AmbientLight al = new AmbientLight();
al.setColor(ColorRGBA.White.mult(1.3f));
rootNode.addLight(al);
 
DirectionalLight dl = new DirectionalLight();
dl.setColor(ColorRGBA.White);
dl.setDirection(new Vector3f(2.8f, -2.8f, -2.8f).normalizeLocal());
rootNode.addLight(dl);

~~~~~~~~~~~Incarcare model~~~~~~~~~~~~~

assetManager.registerLocator("town.zip", ZipLocator.class);
sceneModel = assetManager.loadModel("main.scene");
sceneModel.setLocalScale(2f);

